---
import reasons from '@js/reasonsObject.js';
---

<div class="w-full lg:max-w-full">
  <h1 class="lg:text-5xl text-white text-3xl font-bold text-center lg:my-20 my-8">¿Por qué DevCodelin?</h1>
  {reasons.map((reason, index) => (
    <div class={`flex w-full ${index % 2 === 0 ? 'flex-row' : 'flex-row-reverse'} items-center lg:my-12 mt-0 observer-element`} data-animation-direction={`${index % 2 === 0 ? 'left' : 'right'}`}>
      <img src={reason.image} alt={reason.title} class="lg:max-h-80 h-verticalImg mb-8 opacity-70 object-cover rounded-2xl lg:w-1/2 w-full"/>
      <div class={`absolute lg:w-1/2 h-fit p-6 lg:mt-32 lg:bottom-4 bottom-0 mb-8 ${index % 2 === 0 ? 'lg:right-96' : 'lg:left-96'} bg-primary rounded-2xl z-10 shadow-2xl`}>
        <h3 class="text-secondary font-bold text-xl mb-2 uppercase">{reason.title}</h3>
        <p class="text-secondary">{reason.description}</p>
      </div>
    </div>
  ))}
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const direction = entry.target.getAttribute('data-animation-direction');
          const animationClass = direction === 'left' ? 'animate-slideInLeft' : 'animate-slideInRight';
          entry.target.classList.add(animationClass);
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });

    // Main container
    const elements = document.querySelectorAll('.observer-element');
    elements.forEach(el => {
      observer.observe(el);
    });
  });
</script>
