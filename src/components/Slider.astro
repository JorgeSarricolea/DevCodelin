---
import slides from '@js/slidesObject.js';
---

<div id="indicators-carousel" class="relative w-full" data-carousel="static">
    <!-- Carousel wrapper -->
    <div class="relative h-56 overflow-hidden rounded-lg md:h-96 text-center">
      <!-- Carousel Items -->
      {slides.map((slide, index) => (
        <div class={`hidden duration-700 ease-in-out ${index === 0 ? 'block' : ''}`} data-carousel-item={index === 0 ? 'active' : ''}>
          <i class={`${slide.icon} text-secondary text-5xl mb-4`}></i>
          <h1 class="text-3xl uppercase font-semibold mb-2">{slide.title}</h1>
          <h2 class="text-1xl">{slide.description}</h2>
        </div>
      ))}

        <!-- Slider indicators -->
        <div class="absolute z-30 flex space-x-3 rtl:space-x-reverse lg:bottom-48 bottom-0 left-1/2 transform -translate-x-1/2">
            {slides.map((_, index) => (
            <button type="button"
                    class={`w-3 h-3 rounded-full cursor-default ${index === 0 ? 'bg-grey' : 'bg-grey'}`}
                    aria-current={index === 0 ? 'true' : 'false'}
                    aria-label={`Slide ${index + 1}`}
                    data-carousel-slide-to={index}>
            </button>
            ))}
        </div>
    </div>
</div>

<script type="module">
  window.addEventListener('load', () => {
      const carousel = document.getElementById('indicators-carousel');
      const slides = Array.from(carousel.querySelectorAll('[data-carousel-item]'));
      const indicators = Array.from(carousel.querySelectorAll('[data-carousel-slide-to]'));
      let currentIndex = 0;
      const slidesCount = slides.length;
      const interval = 2500; // 2.5 segundos por slide

      function updateCarousel() {
          slides.forEach((slide, index) => {
              slide.classList.toggle('hidden', index !== currentIndex);
          });

          indicators.forEach((indicator, index) => {
              indicator.classList.toggle('bg-secondary', index !== currentIndex);
              indicator.classList.toggle('bg-primary', index === currentIndex);
          });
      }

      // Initial call to updateCarousel to set the initial state of the carousel
      updateCarousel();

      function nextSlide() {
          currentIndex = (currentIndex + 1) % slidesCount;
          updateCarousel();
      }

      setInterval(nextSlide, interval);
  });
</script>
